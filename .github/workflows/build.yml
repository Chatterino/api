---
name: Build

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go: [1.18, 1.19]
        os: [ubuntu-22.04, windows-latest, macos-latest]

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v3

      - name: Get external dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt update && sudo apt -y install build-essential libvips-dev

      - name: Get external dependencies (MacOS)
        if: matrix.os == 'macos-latest'
        run: brew install vips

      - name: Get external dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
            choco upgrade -y pkgconfiglite
            Invoke-WebRequest -Uri https://github.com/libvips/build-win64-mxe/releases/download/v8.13.2/vips-dev-w64-web-8.13.2-static.zip -OutFile .\vips-dev.zip
            Expand-Archive -Path .\vips-dev.zip -DestinationPath .\
            $env:VIPS_PATH=$(Resolve-Path ".\vips-dev-8.13" | select -ExpandProperty Path)
            "VIPS_PATH=$(Resolve-Path ".\vips-dev-8.13" | select -ExpandProperty Path)" >> $env:GITHUB_ENV
            "PKG_CONFIG_PATH=$env:VIPS_PATH/lib/pkgconfig" >> $env:GITHUB_ENV
            "$VIPS_PATH/bin" >> $env:GITHUB_PATH

      - name: Get Go dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -ldflags="-s -w" -v -o ../../build/chatterino-api
        working-directory: cmd/api

      - name: Test
        run: go test -v -tags test ./...

      - name: Migration test
        run: go test -v -tags migrationtest ./...

      - name: Generate code coverage
        if: matrix.os == 'ubuntu-22.04' && matrix.go == '1.19'
        run: go test -race -v -count=1 -coverprofile=coverage.out -tags test ./...

      - name: Upload Test Coverage
        if: matrix.os == 'ubuntu-22.04' && matrix.go == '1.19'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: chatterino-api-${{ matrix.go }}-${{ matrix.os }}
          path: build/chatterino-api

  create-release:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v3
        with:
          path: 'project-git-repo'

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-api-1.19-ubuntu-22.04
          path: bins/ubuntu/

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-api-1.19-macos-latest
          path: bins/macos/

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-api-1.19-windows-latest
          path: bins/windows/

      - name: display structure
        run: ls -lR

      - name: rename files
        run: |
            mkdir final-bins
            mv bins/ubuntu/chatterino-api final-bins/chatterino-api-ubuntu-x86_64
            mv bins/windows/chatterino-api final-bins/chatterino-api-windows-x86_64.exe
            mv bins/macos/chatterino-api final-bins/chatterino-api-macos-x86_64

      - name: build-changelog
        run: sed "0,/## $(echo "$GITHUB_REF_VALUE" | cut -d '/' -f 3 | cut -c2-)/d" project-git-repo/CHANGELOG.md | sed '/^## /,+999999999999999999 d' | tail -n+2 | head -n-1 > release-body
        env:
          GITHUB_REF_VALUE: ${{ github.ref }}

      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release-body
          files: |
            final-bins/chatterino-api-ubuntu-x86_64
            final-bins/chatterino-api-windows-x86_64.exe
            final-bins/chatterino-api-macos-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
