// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Chatterino/api/internal/resolvers/twitch (interfaces: TwitchAPIClient)
//
// Generated by this command:
//
//	mockgen -destination ../../mocks/mock_TwitchAPIClient.go -package=mocks . TwitchAPIClient
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	helix "github.com/nicklaw5/helix"
	gomock "go.uber.org/mock/gomock"
)

// MockTwitchAPIClient is a mock of TwitchAPIClient interface.
type MockTwitchAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockTwitchAPIClientMockRecorder
	isgomock struct{}
}

// MockTwitchAPIClientMockRecorder is the mock recorder for MockTwitchAPIClient.
type MockTwitchAPIClientMockRecorder struct {
	mock *MockTwitchAPIClient
}

// NewMockTwitchAPIClient creates a new mock instance.
func NewMockTwitchAPIClient(ctrl *gomock.Controller) *MockTwitchAPIClient {
	mock := &MockTwitchAPIClient{ctrl: ctrl}
	mock.recorder = &MockTwitchAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTwitchAPIClient) EXPECT() *MockTwitchAPIClientMockRecorder {
	return m.recorder
}

// GetClips mocks base method.
func (m *MockTwitchAPIClient) GetClips(params *helix.ClipsParams) (*helix.ClipsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClips", params)
	ret0, _ := ret[0].(*helix.ClipsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClips indicates an expected call of GetClips.
func (mr *MockTwitchAPIClientMockRecorder) GetClips(params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClips", reflect.TypeOf((*MockTwitchAPIClient)(nil).GetClips), params)
}

// GetUsers mocks base method.
func (m *MockTwitchAPIClient) GetUsers(params *helix.UsersParams) (*helix.UsersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", params)
	ret0, _ := ret[0].(*helix.UsersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockTwitchAPIClientMockRecorder) GetUsers(params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockTwitchAPIClient)(nil).GetUsers), params)
}
